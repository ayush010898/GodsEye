{"version":3,"sources":["components/footer.js","components/AccountProfile.js","components/AccountProfileDetails.js","components/TaskProgress.js","components/alertbox.js","keys.js","components/toDoList.js","components/Coursecard.js","components/Slideshow.js","Pages/Login.js","Pages/Accounts.js","Pages/Courses.js","components/PanelHeader.js","Pages/Employees.js","Pages/UserDashboard.js","components/RegistrationProfile.js","Pages/Registration.js","components/AddCourse.js","Pages/NewCourse.js","components/AddNewToDo.js","components/AssignCourse.js","Pages/AddToDo.js","RouteComp.js","components/MiniDrawer.js","components/UserDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","AccountProfile","Headers","localStorage","getItem","details","useState","avatar","city","jobTitle","Firstname","LastName","email","dob","doj","values","setValues","useEffect","firstName","lastName","designation","address","Card","CardContent","Box","sx","alignItems","display","flexDirection","Avatar","src","height","width","Typography","color","gutterBottom","variant","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Date","Divider","AccountProfileDetails","handleChange","event","target","name","value","autoComplete","noValidate","CardHeader","title","Grid","container","spacing","item","md","xs","TextField","fullWidth","label","onChange","disabled","justifyContent","p","TaskProgress","courses","tasks","isdetails","taskscomp","setTaskcomp","courselist","setCourses","tempList1","i","findIndex","x","id","console","log","push","length","temp","courseCompletion","coursecomp","setCourseemp","tasklist","setTask","sum","forEach","course","amountCompleted","toFixed","taskcomplete","isCompleted","tempList2","className","sm","backgroundColor","orange","pt","LinearProgress","Alert","props","elevation","useStyles","makeStyles","theme","root","marginTop","CustomizedSnackbars","message","severity","isClicked","classes","React","open","setOpen","Boolean","handleClose","reason","setTimeout","Snackbar","autoHideDuration","onClose","server","url","FullWidthGrid","setisdetails","Task1","Task2","Task3","setMessage","setSeverity","openHandle","setOpenHandle","idx","checked","myHeaders2","tempList","FormControl","component","FormGroup","map","t","FormControlLabel","control","Checkbox","Button","onClick","filter","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","CourseCard","count","setcomplete","coursename","empid","ButtonGroup","steps","Slideshow","breakPoints","itemsToShow","c","Login","Container","maxWidth","mb","clientId","buttonText","onSuccess","axios","token","tokenId","googleId","profileObj","setItem","jwtToken","result","empId","role","window","location","reload","onFailure","cookiePolicy","pb","align","margin","type","py","size","Account","setDetails","myHeaders","emp","minHeight","lg","courseEmp","style","getTime","courseID","getModalStyle","top","left","transform","float","toolbar","padding","marginBottom","breakpoints","up","paper","position","palette","background","border","boxShadow","shadows","btn","textAlign","btn1","btn2","Courses","modalStyle","selectedCard","setselectedCard","isupdated","setupdated","courseName","summary","weightage","allCourses","obj","courseImage","useHistory","cardjsx","index","handleOpen","Row","to","Modal","defaultValue","PanelHeader","undefined","content","Employees","emplist","setEmpList","finalOutput","courseUsers","courseComplte","TaskComplte","taskUsers","task","taskCompletion","myHeader2","Col","e","isNaN","UserDashboard","RegistrationProfile","required","phone","select","SelectProps","native","option","Registration","AddCourses","substring","NewCourse","AddCourse","AddNewToDo","taskName","date","state","AssignCourse","Designation","setDesignation","assignedCourse","cname","splice","CourseName","RouteComp","path","exact","AddToDo","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","mixins","flexGrow","MiniDrawer","useTheme","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","noWrap","direction","List","ListItem","ListItemIcon","ListItemText","primary","href","clear","App","user","Drawer","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa22f00e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nfunction Footer() {\n    return(\n        <div>\n            Footer\n        </div>\n    )\n}\n\nexport default Footer","// import moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\n\n\n\nconst myHeaders2=new Headers({\n  'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n  'Content-Type':'application/json'\n});\n\nconst AccountProfile = ({details}) => {\n  const [values,setValues]=useState({\n    avatar: '/static/images/avatars/avatar_6.png',\n    city: 'Los Angeles',\n    jobTitle: 'Senior Developer',\n    Firstname: 'Katarina',\n    LastName:'smit',\n    email:'example@gmail.com',\n    dob: '',\n    doj : ''\n  })\n  \n  function getDate(today){\n    var dd = String(today.getDate()-1).padStart(2, '0');\n  var mm = String(today.getMonth()+1).padStart(2, '0'); //January is 0!\n  var yyyy = today.getFullYear();\n  \n  today = dd + '/' + mm + '/' + yyyy;\n  return today\n  }\n  useEffect(()=> {\n    \n              setValues({\n                ...values,\n                Firstname:details?.firstName,\n              LastName:details?.lastName,\n              jobTitle:details?.designation,\n              email:details?.email,\n              city:details?.address,\n              dob:details?.dob,\n              doj:details?.doj,\n              })\n  },[details])\n  return (<div>\n    <Card {...details}>\n    <CardContent>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <Avatar\n          src={values.avatar}\n          sx={{\n            height: 100,\n            width: 100\n          }}\n        />\n        <Typography\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h3\"\n        >\n          {`${values.Firstname} ${values.LastName}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          variant=\"body2\"\n        >\n         { `DOB:${getDate(new Date(values.dob))}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          variant=\"body2\"\n        >\n          {values.email}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {` ${values.jobTitle},${values.city} `}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n            {/* incase time is needed */}\n          {/* {`${moment().format('hh:mm A')} ${user.timezone}`} */}\n        </Typography>\n        <Divider />\n        <Typography>\n          \n        </Typography>\n      </Box>\n    </CardContent>\n    <Divider />\n  </Card>\n  </div>)\n  \n};\n\nexport default AccountProfile;\n","import { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\n\n\nconst AccountProfileDetails = ({details}) => {\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: 'something@devias.io',\n    designation: '',\n    dob: '',\n    doj : '',\n    address: 'Alabama'\n    \n  });\n\n\n  function getDate(today){\n    var dd = String(today.getDate()).padStart(2, '0');\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  var yyyy = today.getFullYear();\n  \n  today = dd + '/' + mm + '/' + yyyy;\n  return today\n  }\n\n  useEffect(()=> {\n   \n      setValues({\n        ...values,\n        firstName:details?.firstName,\n        lastName:details?.lastName,\n        email:details?.email,\n        address:details?.address,\n        designation:details?.designation,\n        dob:details?.dob,\n        doj:details?.doj\n      });\n  },[details])\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...details}\n    >\n      <Card>\n        <CardHeader\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                disabled\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                disabled\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                disabled\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Address\"\n                name=\"phone\"\n                onChange={handleChange}\n                value={values.address}\n                variant=\"outlined\"\n                disabled\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Date of Joining\"\n                name=\"doj\"\n                onChange={handleChange}\n                disabled\n                value={getDate(new Date(values.doj))}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AccountProfileDetails;\n","import {\n    Avatar,\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    LinearProgress,\n    Typography\n  } from '@material-ui/core';\n  import \"../styles/taskProgress.css\"\n  import { orange } from '@material-ui/core/colors';\n  import InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n  import {useEffect, useState} from \"react\";\n\n\n  function TaskProgress({courses,tasks,isdetails}){\n   const [taskscomp,setTaskcomp]=useState(0)\n   const [courselist,setCourses]=useState([])\n   var tempList1=[]\n   for(let i=0;i<courses?.length;i++){\n         \n    var index=tempList1.findIndex(x=>x.id === courses[i].id)\n    if(index>=0){\n      console.log(\"courses exist\")\n    }else{\n      tempList1.push(courses[i])\n    }\n  }\n  var temp=courseCompletion(tempList1)\n  console.log(\"temp\",temp)\n    const [coursecomp,setCourseemp]=useState(temp)\n \n    console.log(\"temp list\",courseCompletion(tempList1),coursecomp,temp)\n    const [tasklist,setTask]=useState([])\n\n    useEffect(()=>{\n     \n        var tempList1=[]\n        var tempList2=[]\n        for(let i=0;i<courses?.length;i++){\n         \n          var index=tempList1.findIndex(x=>x.id === courses[i].id)\n          if(index>=0){\n            console.log(\"courses exist\")\n          }else{\n            tempList1.push(courses[i])\n          }\n        }\n        // if(courselist.length==0){\n        // setCourses([...tempList1])\n        // }\n        setCourses([...tempList1])\n\n        for(let i=0;i<tasks?.length;i++){\n          console.log(\"task progress tasks\",tasks.length)\n          var index=tempList2.findIndex(x=>x.id === tasks[i].id)\n          if(index>=0){\n            console.log(\"task exist\")\n          }else{\n            tempList2.push(tasks[i])\n          }\n        }\n        if(tasklist.length==0){\n        setTask([...tempList2])\n        }\n    \n        setCourseemp(courseCompletion(courselist))\n        setTaskcomp(taskcomplete(tasklist))\n    },[courses,tasks])\n   \n    //  taskscomp=taskcomplete(tasklist)\n    //  coursecomp=courseCompletion(courselist)\n    function courseCompletion(courses){\n      let sum=0\n      courses.forEach((course)=>{\n          sum+=course.amountCompleted\n          \n      })\n  \n      return ((sum/(courses.length*100))*100).toFixed(2)\n  }\n  function taskcomplete(tasks){\n    let sum=0;\n    tasks.forEach((tasks)=>{\n      if(tasks.isCompleted){\n        sum=sum+1\n      }\n    })\n    return ((sum*100)/tasks.length).toFixed(2)\n  }\n    return(\n    <Grid className=\"mainLayout\" container spacing={2}>\n      <Grid item xs={6} sm={6}>\n            <Card className=\"mainCard\">\n              <CardContent>\n                <Grid\n                  container\n                  spacing={3}\n                  sx={6}\n                >\n                  <Grid item>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"h6\"\n                    >\n                      TASK PROGRESS\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h3\"\n                    >\n                      {taskcomplete(tasklist)+\"%\"}\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Avatar\n                      sx={{\n                        backgroundColor: orange[600],\n                        height: 56,\n                        width: 56\n                      }}\n                    >\n                      <InsertChartIcon />\n                    </Avatar>\n                  </Grid>\n                </Grid>\n                <Box sx={{ pt: 3 }}>\n                  <LinearProgress\n                    value={taskscomp}\n                    variant=\"determinate\"\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={6} sm={6}>\n            <Card className=\"mainCard\">\n              <CardContent>\n                <Grid\n                  container\n                  spacing={3}\n                  sx={6}\n                >\n                  <Grid item>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"h6\"\n                    >\n                      COURSES PROGRESS\n                    </Typography>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h3\"\n                    >\n                      {temp+'%'}\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Avatar\n                      sx={{\n                        backgroundColor: orange[600],\n                        height: 56,\n                        width: 56\n                      }}\n                    >\n                      <InsertChartIcon />\n                    </Avatar>\n                  </Grid>\n                </Grid>\n                <Box sx={{ pt: 3 }}>\n                  <LinearProgress\n                    value={temp}\n                    variant=\"determinate\"\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n    </Grid>\n  );\n                    }\n  \n  export default TaskProgress;","// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Alert, AlertTitle } from '@material-ui/lab';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     '& > * + *': {\n//       marginTop: theme.spacing(2),\n//     },\n//   },\n//   alertBox: {\n//       textAlign:'center',\n//       alignItems:'center'\n//   }\n// }));\n\n// export default function DescriptionAlerts({message,severity}) {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n//       <Alert severity={severity} autoHideDuration={6000}>\n//         <AlertTitle className={classes.alertBox}>{message}</AlertTitle>\n//         <strong className={classes.alertBox}> Information Updated Successfully </strong>\n//       </Alert>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars({message,severity,isClicked}) {\n  const classes = useStyles();\n  console.log('in alert',message,severity)\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(()=> {\n      setOpen(Boolean(message))\n  },[Boolean[message]])\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n    useEffect(()=> {\n        setTimeout(()=> {\n            if(open)\n            {\n                setOpen(!open)\n            }\n        },6000)\n    })\n  ;\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open && isClicked} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","const server={\r\n    url : \"http://52.23.214.76:7901/\"\r\n    // url: \"http://localhost:7901/\"\r\n}\r\nexport default server","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Card,\n  Box,\n  Button\n} from '@material-ui/core';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport \"../styles/toDo.css\";\nimport {useState} from \"react\";\nimport Alert from './alertbox';\nimport server from '../keys';\nexport default function FullWidthGrid({tasks,setisdetails}) {\nconsole.log(tasks)\n  const [state, setState] = React.useState({\n    Task1: true,\n    Task2: false,\n    Task3: false,\n  });\n\n  const [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  const handleChange = (event) => {\n    // console.log(state)\n        var idx=tasklist.findIndex(x=>x.id === event.target.name)\n        tasklist[idx].isCompleted=event.target.checked\n    //setState({ ...state, [event.target.name]: event.target.checked });\n    console.log('Index tasklist',tasklist[idx])\n    setTask([...tasklist])\n  };\n\n  const myHeaders2=new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n    'Content-Type':'application/json'\n  });\nconst [tasklist,setTask]=useState([])\n\nuseEffect(()=>{\n  var tempList=[]\n    for(let i=0;i<tasks?.length;i++){\n      var index=tempList.findIndex(x=>x.id === tasks[i].id)\n      if(index>=0){\n        console.log(\"task exist\")\n      }else{\n        tempList.push(tasks[i])\n      }\n    }\n    if(tasklist.length==0){\n    setTask([...tempList])\n    }\n    // console.log('templist printing',tasklist)\n},[tasks])\n    // console.log('tasklist printing',tasklist)\n//  useEffect(()=> {\n//   fetch(`http://localhost:7901/empDashboard/${localStorage.getItem('empId')}`,{\n//     headers:myHeaders\n//   })\n//   .then(response => response.json())\n//   .then(data =>{\n//     var tempList=[]\n//     for(let i=0;i<data.emp.tasks.steps.length;i++){\n//       var index=tempList.findIndex(x=>x.id === data.emp.tasks.steps[i].id)\n//       if(index>=0){\n//         console.log(\"task exist\")\n//       }else{\n//         tempList.push(data.emp.tasks.steps[i])\n//       }\n//     }\n//     setTask([...tempList])\n//   })\n//  },[])\n\n  function updateTasks(){\n    \n    var tempList=tasklist.filter((t)=> {\n      return t.isCompleted==true\n    })\n    console.log('update tasks',tempList)\n    var requestOptions={\n      method:'POST',\n      headers:myHeaders2,\n      body:JSON.stringify({\n       tasks:tempList\n      })\n  }\n  fetch(`${server.url}empUpdateToDo`,requestOptions)\n  .then((response)=>response.json())\n  .then((data)=>{\n    console.log('status check',data)\n     if(data.message.length>0)\n     {\n      if(data.message==='added successfully')\n      {\n      setMessage('Added Successfully')\n      setSeverity('success')\n      setOpenHandle(true)\n      }else if(data.message==='Unauthorized Access - Not an Admin!')\n      {\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }else{\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }\n     }else{\n       setMessage('Sorry unable to make a request at this moment')\n       setSeverity('error')\n       setOpenHandle(true)\n     }\n   // window.location.reload()\n   setisdetails(true)\n  })\n  setMessage('')\n  }\n  return(\n    <div className=\"toDo123\">\n    {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n    <Card >\n      <h1>To Do Tasks</h1>\n      <FormControl component=\"fieldset\" variant=\"standard\">\n        <FormGroup>\n            {\n                 tasklist.map((t)=>{\n                         return(\n                                <FormControlLabel\n                                          control={\n                                        <Checkbox checked={t.isCompleted} disabled={t.isCompleted} onChange={handleChange} name={t.id} />\n                                                   }\n                                       label={t.id}\n                                />\n                               )\n                                   }\n                                ) }\n       </FormGroup>\n       \n    </FormControl>\n    <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={updateTasks}\n          >\n            Submit Tasks\n          </Button>\n        </Box>\n  </Card>\n  \n</div>  );\n}\n","import React from 'react';\nimport {Card,CardTitle,CardFooter,CardContent} from '@material-ui/core';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport '../styles/coursecard.css';\nimport {useState} from \"react\";\nimport { EmojiObjectsRounded } from '@material-ui/icons';\nimport Alert from './alertbox';\nimport server from '../keys';\n\nfunction CourseCard(props){\nconst [amountCompleted,setcomplete]=useState(props.count)\nconst [coursename,setName]=useState(props.name)\nconst [empid,setEmpid]=useState(props.empid)\nconst [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  \nfunction IncreaseCount(){\n  if(amountCompleted<100){\n  setcomplete(amountCompleted+1)\n  }\n}\nfunction DecreaseCount(){\n  if(amountCompleted>0){\n  setcomplete(amountCompleted-1)\n  \n}else{\n    setcomplete(0)\n  }\n}\nfunction completeCourse(){\n  setcomplete(100)\n  \n}\n\nfunction updateCourse(){\n  const myHeaders2=new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n    'Content-Type':'application/json'\n  });\n  var requestOptions={\n    method:'POST',\n    headers:myHeaders2,\n    body:JSON.stringify({\n      steps: [{\n        id:coursename,\n        amountCompleted:amountCompleted\n      }]\n    })\n}\n\n\nfetch(`${server.url}empUpdateCourses`,requestOptions)\n.then((response)=>response.json())\n.then((data)=>{\n  console.log(data)\n  if(data.message.length>0)\n  {\n    if(data.message==='added successfully')\n    {\n    setMessage('Added Successfully')\n    setSeverity('success')\n    setOpenHandle(true)\n    }else if(data.message==='Unauthorized Access - Not an Admin!')\n    {\n      setMessage(data.message)\n    setSeverity('warning')\n    setOpenHandle(true)\n    }else{\n      setMessage(data.message)\n    setSeverity('warning')\n    setOpenHandle(true)\n    }\n  }else{\n    setMessage('Sorry unable to make a request at this moment')\n    setSeverity('error')\n    setOpenHandle(true)\n  }\n  //window.location.reload()\n  props.setisdetails(true)\n})\nsetMessage('')\n}\n\n return(\n<div>\n{message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n<Card >\n        <CardContent>\n          <h3>{coursename}</h3>\n          <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button className='add' onClick={DecreaseCount}>-</Button>\n          {/* <Badge color=\"light\" className='b1' >{\"   \"+props.count+\"   \"}</Badge> */}\n          <p>{amountCompleted}</p>\n          <Button className='sub' onClick={IncreaseCount}>+</Button>\n          </ButtonGroup><br/>\n          <Button color=\"primary\" onClick={completeCourse}>Done</Button>\n          <Button color=\"primary\" onClick={updateCourse}>Submit</Button>   \n        </CardContent>\n        \n      </Card>\n</div>\n )  \n}\nexport default CourseCard;","import React, { useEffect } from 'react';\nimport Carousel from 'react-elastic-carousel';\nimport CourseCard from './Coursecard';\nimport {useState} from \"react\";\n\nfunction Slideshow({courses,setisdetails,isdetails}){\n  const myHeaders=new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n  });\n \nconst breakpoints=[\n  {width:1,itemsToShow:1},\n  {width:300,itemsToShow:2},\n  {width:600,itemsToShow:3},\n  {width:1000,itemsToShow:4}\n]\nconst [courselist,setCourses]=useState([])\nconst [empid,setEmpid]=useState('')\nconst [designation,setDesignation]=useState('')\nuseEffect(()=>{\n  var tempList=[]\n    for(let i=0;i<courses?.length;i++){\n      var index=tempList.findIndex(x=>x.id === courses[i].id)\n      if(index>=0){\n        console.log(\"task exist\")\n      }else{\n        tempList.push(courses[i])\n      }\n    }\n    if(courselist.length==0){\n      setCourses([...tempList])\n    }\n    // console.log('templist printing',tasklist)\n    \n},[courses,isdetails])\n\n\n\n\n\n  return(\n    <div>\n       <Carousel breakPoints={breakpoints}>\n         {\n           courselist.map((c)=>{\n             return(\n               <>\n               <CourseCard name={c.id} count={c.amountCompleted} empid={empid} setisdetails={setisdetails} isdetails={isdetails} />\n               </>\n             )\n           })\n         }\n       </Carousel>\n    </div>\n  )\n}\nexport default Slideshow","import {\n  Box,\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography\n} from '@material-ui/core';\n//import GoogleIcon from '../icons/Google';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from'axios';\nimport '../styles/Login.css'\nimport server from '../keys';\n\nconst Login = () => {\n\n    const responseSuccessGoogle = (response) => {\n        console.log(response)\n        axios({\n            method: \"POST\",\n            url: `${server.url}googlelogin`,\n            data:{token: response.tokenId,\n              googleId : response.profileObj.googleId\n            \n            }\n        }).then(response => {\n          console.log(\"google Login success\",response)\n          localStorage.setItem('tokenId', response.data.jwtToken);\n          // localStorage.setItem('empId' , response.data.empId)\n          localStorage.setItem('empId', response.data.result.empId)\n          localStorage.setItem('role', response.data.result.role)\n          window.location.reload()\n        })\n    }\n\n    const responseErrorGoogle = (response) => {\n        console.log(response)\n    }\n\n  return (\n    <>\n        <Container className=\"loginContainer\" maxWidth=\"sm\">\n              <form>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in using Google\n                  </Typography>\n                </Box>\n                <Grid\n                  container\n                  spacing={3}\n                >\n                    <Button fullWidth>\n                        <GoogleLogin\n                                clientId=\"20580104459-7i89gv3opg9fpjpe9n7vmfe5lfqpk856.apps.googleusercontent.com\"\n                                buttonText=\"Login\"\n                                onSuccess={responseSuccessGoogle}\n                                onFailure={responseErrorGoogle}\n                                cookiePolicy={'single_host_origin'}\n                                fullWidth\n                            />\n                    </Button>\n                </Grid>\n                <Box\n                  sx={{\n                    pb: 1,\n                    pt: 3\n                  }}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    or login with email address\n                  </Typography>\n                </Box>\n                <TextField\n                  fullWidth\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  type=\"email\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n              </form>\n        </Container>\n    </>\n  );\n};\n\nexport default Login;\n","import {\n    Box,\n    Container,\n    Grid\n  } from '@material-ui/core';\n  import AccountProfile from '../components/AccountProfile';\n  import AccountProfileDetails from '../components/AccountProfileDetails'\n  import TaskProgress from \"../components/TaskProgress\"\n  import ToDoList from '../components/toDoList'\n  import Slideshow from '../components/Slideshow';\n  import Login from './Login';\n  import {useEffect, useState} from 'react'\n  import server from '../keys';\n\n  const Account = () => {\n    function getDate(today){\n      var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    \n    today = dd + '/' + mm + '/' + yyyy;\n    return today\n    }\n    const [isupdated,setupdated]=useState(false)\n    const [details,setDetails]=useState(null)\n    const [isdetails,setisdetails]=useState(false)\n  const myHeaders=new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n  });\n  useEffect(()=> {\n    fetch(`${server.url}empDashboard/${localStorage.getItem('empId')}`,{\n      headers:myHeaders\n    })\n    .then(response => response.json())\n    .then(data =>{\n      console.log('employee details',data.emp)\n      setDetails(data.emp)\n    })\n    setisdetails(false)\n   },[isdetails])\n   console.log('details printed',details)\n   return ( <>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth=\"lg\">\n        <h2> Telstra On-Boarding Page </h2>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <AccountProfile details={details?.courseEmp}/>\n            </Grid>\n            <Grid\n              item\n              lg={8}\n              md={6}\n              xs={12}\n            >\n              <AccountProfileDetails details={details?.courseEmp} />\n            </Grid>\n          </Grid>\n        </Container>\n        <Container className=\"progress\">\n        <h2> On-Boarding Progress </h2>\n              <h3 style={{\"color\": \"red\"}}>\n              Due Date: {getDate(new Date(new Date(details?.courseEmp.doj).getTime() + 86400000 * 15))}\n              </h3>\n          <TaskProgress courses={details?.courseEmp.courseID} tasks={details?.tasks.steps} isdetails={isdetails} />\n        </Container>\n        <Container className=\"toDoList\">\n          <ToDoList tasks={details?.tasks.steps} setisdetails={setisdetails}/>\n        </Container>\n        <Container>\n        <h2> Assigned Courses </h2>\n          <Slideshow courses={details?.courseEmp.courseID} setisdetails={setisdetails} isdetails={isdetails}  />\n        </Container>\n        {/* <Container>\n          <Login />\n        </Container> */}\n      </Box>\n    </>\n   )\n  };\n  \n  export default Account;\n","import React, {useState,useEffect} from \"react\";\nimport { Row} from \"reactstrap\";\nimport {\n    Button,\n    Card,\n    CardContent,\n  } from '@material-ui/core';\nimport \"../styles/courses.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  NavLink } from 'react-router-dom'; \nimport Modal from '@material-ui/core/Modal';\nimport Alert from '../components/alertbox'\nimport server from \"../keys\";\nimport {useHistory} from 'react-router-dom';\nfunction getModalStyle() {\n  const top = 50\n  const left = 50 \n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      float:\"right\"\n    },\n  },\n  toolbar: {\n    minHeight: 128,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      marginBottom: theme.spacing(9),\n    },\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  btn: {\n    margin:\"auto\",\n    textAlign:\"center\"\n  },\n  btn1: {\n    margin:\"5px\",\n  },\n  btn2: {\n    margin:\"5px\",\n  },\n}));\n\n\n\nfunction Courses() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [courselist,setCourses]=useState([])\n  const [selectedCard,setselectedCard]=useState(null)\n  const [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  const [isupdated,setupdated]=useState(false)\n  const [values, setValues] = useState({\n    courseName:'',\n    summary:'',\n      weightage:''\n  });\n  useEffect(() => {\n    console.log(\"from courses useeffect\",isupdated)\n    var tempList=[]\n    // POST request using fetch inside useEffect React hook\n    const myHeaders = new Headers({\n      'Authorization': `Bearer ${localStorage.getItem('tokenId')}`\n  });\n     fetch(`${server.url}adminGetCourses`, {\n      headers: myHeaders\n    })\n      .then(response => response.json())\n      .then(data =>{\n        // console.log('request',data.allCourses)\n        for(let i=0;i<data.allCourses?.length;i++){\n          var obj={\n            courseImage:\"Course Image\",\n            courseName : data.allCourses[i].courseName,\n            weightage:data.allCourses[i].weightage,\n            summary:data.allCourses[i].summary,\n            \n          }\n          var index=tempList.findIndex(x=>x.courseName === obj.courseName)\n          if(index>=0){\n            console.log(\"courses exist\")\n          }else{\n            tempList.push(obj)\n          }\n        }\n        setCourses([...tempList])\n      \n        \n      })\n     setupdated(false) \n    },[isupdated])\n    // This empty array is to make sure component is rendered only once\n    //If passed something then it shows dynamic changes jaise change hua vaise change ho jaega\n\n  \n   \n\n      // console.log(courselist)\n    \n  \n      const handleChange = (event) => {\n        console.log('check values',values)\n        setValues({\n          ...values,\n          // courseName: selectedCard?.courseName,\n          [event.target.name]: event.target.value\n        });\n      };\n\n      const handleOpen = (index) => {\n        setselectedCard(courselist[index])\n        setValues(courselist[index])\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n      const myHeaders2=new Headers({\n        'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n        'Content-Type':'application/json'\n      });\n       var history=useHistory()\n      function editemployee(){\n       \n        var requestOptions={\n          method:'POST',\n          headers:myHeaders2,\n          body:JSON.stringify({\n            course : {\n              'courseName' : values.courseName,\n              'weightage': values.weightage,\n              'summary' : values.summary\n            }\n          })\n      }\n      \n      \n      fetch(`${server.url}adminEditCourse`,requestOptions)\n      .then((response)=>response.json())\n      .then((data)=>{\n        if(data.message.length>0)\n        {\n          if(data.message==='added successfully')\n          {\n          setMessage('Added Successfully')\n          setSeverity('success')\n          setOpenHandle(true)\n          }else if(data.message==='Unauthorized Access - Not an Admin!')\n          {\n            setMessage(data.message)\n          setSeverity('warning')\n          setOpenHandle(true)\n          }else{\n            setMessage(data.message)\n          setSeverity('warning')\n          setOpenHandle(true)\n          }\n        }else{\n          setMessage('Sorry unable to make a request at this moment')\n          setSeverity('error')\n          setOpenHandle(true)\n        }\n       // window.location.reload()\n     //  history.push(\"/courses\")\n     setupdated(true)\n      })\n      setValues({\n        ...values,\n        courseName:'',\n        summary:'',\n        weightage:'',\n      })\n      setMessage('')\n      // console.log(values)\n     \n      \n  \n      }\n      var cardjsx=courselist.map((c,index)=>{\n        // console.log(c)\n        return(\n          <Card className=\"coursesCard\">\n          <CardContent>\n            <table>\n              <tr>\n                <th>{c.courseName}</th>\n                <th>{c.weightage}</th>\n                <th>{c.summary}</th>\n                \n                <th> <Button variant=\"contained\" color=\"default\" onClick={()=> handleOpen(index)}>Edit</Button>\n               \n                \n                 </th>\n              </tr>\n            </table>\n          </CardContent>\n        </Card>\n        )\n      })\n  return(\n    <>\n    <div className=\"content123\">\n    {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n        <Row>\n          <Card className=\"coursesTitle\">\n              <h5 className=\"title\">All Courses Available</h5>\n              <NavLink to=\"/courses/addCourse\">\n                <div className={classes.root}>\n                  <Button variant=\"contained\" color=\"primary\">Add Course</Button>\n                </div>\n              </NavLink>\n          </Card>\n        </Row>\n        <Row>\n          {cardjsx}\n          </Row>\n          <Modal\n              open={open}\n              onClose={handleClose}\n            >\n              <div style={modalStyle} className={classes.paper}>\n                <table>\n                  <tr>\n                    <th>Course Name:</th>\n                    <td><input type=\"text\" name=\"courseName\" value={selectedCard?.courseName} onChange={handleChange}  /></td>\n                  </tr>\n                  <tr>\n                    <th>Summary:</th>\n                    <td><input type=\"text\" name=\"summary\" onChange={handleChange} defaultValue={selectedCard?.summary} /></td>\n                  </tr>\n                  <tr>\n                    <th>Weightage:</th>\n                    <td><input type=\"text\"   name=\"weightage\" onChange={handleChange}  defaultValue={selectedCard?.weightage}/></td>\n                  </tr>\n                  \n                  {/* <tr>\n                    <td><Button variant=\"contained\" color=\"primary\" onClick={handleClose}>Close</Button></td>\n                    <td><Button variant=\"contained\" color=\"primary\">Save</Button></td>\n                  </tr> */}\n                </table>\n                <div className={classes.btn}>\n                  <Button className={classes.btn1} variant=\"contained\" color=\"primary\" onClick={handleClose}>Close</Button>\n                  <Button className={classes.btn2} variant=\"contained\" color=\"primary\" onClick={editemployee}>Save</Button>\n                </div>\n              </div>\n            </Modal>\n        </div>\n    </>\n  );\n}\n\nexport default Courses;\n","import React from \"react\";\n\nfunction PanelHeader(props) {\n  return (\n    <div\n      className={\n        \"panel-header \" +\n        (props.size !== undefined ? \"panel-header-\" + props.size : \"\")\n      }\n    >\n      {props.content}\n    </div>\n  );\n}\n\nexport default PanelHeader;\n","import React, {useState,useEffect} from \"react\";\nimport { Row, Col} from \"reactstrap\";\nimport {\n    Button,\n    Card,\n    CardContent,\n  } from '@material-ui/core';\nimport \"../styles/employees.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport PanelHeader from \"../components/PanelHeader\";\nimport { NavLink } from 'react-router-dom';\nimport Alert from '../components/alertbox'\nimport server from \"../keys\";\nfunction getModalStyle() {\n  const top = 50\n  const left = 50 \n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        float:\"right\"\n      },\n    },\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    btn: {\n      margin:\"auto\",\n      textAlign:\"center\"\n    },\n    btn1: {\n      margin:\"5px\",\n    },\n    btn2: {\n      margin:\"5px\",\n    },\n  }));\n\nfunction Employees() {\n\n    const classes = useStyles();\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [values, setValues] = useState({\n      firstName: '',\n      lastName: '',\n      email: '',\n      address: '',\n      empId:\"\",\n      designation: \"\",\n      dob: \"\",\n      doj : \"\"\n    });\n    const [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  const [isupdated,setupdated]=useState(false)\n    function getDate(today){\n      var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    \n    today = dd + '/' + mm + '/' + yyyy;\n    return today\n    }\n    const [selectedCard,setselectedCard]=useState(null)\n\n    const handleChange = (event) => {\n      console.log('check values',values)\n      setValues({\n        ...values,\n        [event.target.name]: event.target.value\n      });\n    };\n\n    const handleOpen = (index) => {\n      setselectedCard(emplist[index])\n      setValues(emplist[index])\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const [emplist,setEmpList]=useState([])\n    const myHeaders = new Headers({\n      'Authorization': `Bearer ${localStorage.getItem('tokenId')}`\n  });\n    useEffect(() => {\n      console.log(\"from employees useeffect\",isupdated)\n      var tempList=[]\n      // POST request using fetch inside useEffect React hook\n      fetch(`${server.url}adminDashboardEmployee`, {\n        headers: myHeaders\n      })\n      .then(response => response.json())\n      .then(data =>{\n       console.log(data)\n       function courseCompletion(courses){\n        let sum=0\n        // console.log('in course completion',courses)\n        courses.forEach((course)=>{\n          sum+=course.amountCompleted\n          console.log(sum,course.amountCompleted)\n      })\n    \n    \n        return ((sum/(courses.length*100))*100).toFixed(2)\n    }\n\n    function taskCompletion(task){\n      let count=0\n      task.forEach((t)=> {\n        if(t.isCompleted)\n        {\n          count++;\n        }\n      })\n      return ((count/task.length)*100).toFixed(2)\n    }\n        for(let i=0;i<data.finalOutput.courseUsers.length;i++){\n          var obj={\n            empId:data.finalOutput.courseUsers[i].empId,\n            firstName:data.finalOutput.courseUsers[i].firstName,\n            lastName:data.finalOutput.courseUsers[i].lastName,\n            designation:data.finalOutput.courseUsers[i].designation,\n            email:data.finalOutput.courseUsers[i].email,\n            address: data.finalOutput.courseUsers[i].address,\n            dob: data.finalOutput.courseUsers[i].dob,\n            doj: data.finalOutput.courseUsers[i].doj,\n            courseComplte:courseCompletion(data.finalOutput.courseUsers[i].courseID),\n            TaskComplte:0\n          }\n         // console.log(obj)\n          var index=tempList.findIndex(x=>x.empId === obj.empId)\n          if(index>=0){\n            console.log(\"employee exist\")\n          }else{\n            tempList.push(obj)\n          }\n        }\n        console.log(tempList)\n      for(let i=0;i<data.finalOutput.taskUsers.length;i++){\n        var index=tempList.findIndex(x=> x.empId === data.finalOutput.taskUsers[i].empId)\n        if(index>=0)\n        {\n          var obj=tempList[index]\n          obj.TaskComplte=taskCompletion(data.finalOutput.taskUsers[i].steps)\n        }\n\n      }\n      console.log(tempList)\n      setEmpList([...tempList])\n    })\n    setupdated(false) \n      },[isupdated])\n   const myHeader2= new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n    'Content-type':'application/json'\n});\n    function editemployee(){\n      var requestOptions={\n        method:'POST',\n        headers:myHeader2,\n        body:JSON.stringify(values)\n    }\n    \n    \n    fetch(`${server.url}editAnEmployee`,requestOptions)\n    .then((response)=>response.json())\n    .then((data)=>{\n      console.log(data)\n      if(data.message.length>0)\n      {\n        if(data.message==='added successfully')\n        {\n        setMessage('Added Successfully')\n        setSeverity('success')\n        setOpenHandle(true)\n        }else if(data.message==='Unauthorized Access - Not an Admin!')\n        {\n          setMessage(data.message)\n        setSeverity('warning')\n        setOpenHandle(true)\n        }else{\n          setMessage(data.message)\n        setSeverity('warning')\n        setOpenHandle(true)\n        }\n      }else{\n        setMessage('Sorry unable to make a request at this moment')\n        setSeverity('error')\n        setOpenHandle(true)\n      }\n      setValues({\n        ...values,\n        firstName: '',\n        lastName: '',\n        email: '',\n        address: '',\n        empId:\"\",\n        designation: \"\",\n        dob: \"\",\n        doj : \"\"\n      })\n\n   //  window.location.reload()\n   setupdated(true)\n    })\n     setMessage('')\n    console.log(values)\n      \n\n    }\n  return(\n    <>\n    <PanelHeader size=\"sm\" />\n      <div className=\"content\">\n        <Row>\n          <Col md={12}>\n            <Card className=\"employeeTitle\">\n                <h5 className=\"title\">All Employees</h5>\n                <NavLink to=\"/AllEmployees/newEmp\">\n                  <div className={classes.root}>\n                      <Button variant=\"contained\" color=\"primary\">Add New Employee</Button>\n                  </div>\n                </NavLink>\n            </Card>\n          </Col>\n        </Row>\n          \n        {\n          emplist.map((e,index)=>{\n            return(\n              <Card className=\"employeeCard\">\n              <CardContent>\n                <table>\n                  <tr>\n                    <th>{e.firstName}</th>\n                    <th>{e.lastName}</th>\n                    <th>{e.empId}</th>\n                    <th>{e.designation}</th>\n                   <th>{e.address}</th>\n                   <th>{getDate(new Date(e.dob))}</th>\n                   <th>{getDate(new Date(e.doj))}</th>\n                    <th>{e.email}</th>\n                    <th>{!isNaN(e.courseComplte)?e.courseComplte+\"%\": \"No courses assigned\"}</th>\n                    <th>{!isNaN(e.TaskComplte)?e.TaskComplte+\"%\" : \"No tasks assigned\"}</th>\n                    <th> \n                  <Button variant=\"contained\" color=\"default\" onClick={()=> handleOpen(index)}>Edit</Button>\n                 \n                </th>\n                  </tr>\n                </table>\n              </CardContent>\n            </Card> \n              \n            )\n          })\n        }\n          \n        {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n         <Modal\n                    open={open}\n                    onClose={handleClose}\n                  >\n                  \n                    <div style={modalStyle} className={classes.paper}>\n                      <table>\n                        <tr>\n                          <th>First Name:</th>\n                          <td><input type=\"text\" name=\"firstName\" defaultValue={selectedCard?.firstName} onChange={handleChange}  /></td>\n                        </tr>\n                        <tr>\n                          <th>Last Name:</th>\n                          <td><input type=\"text\" name=\"lastName\" defaultValue={selectedCard?.lastName} onChange={handleChange}  /></td>\n                        </tr>\n                        <tr>\n                          <th>Designation:</th>\n                          <td><input type=\"text\"   name=\"designation\" defaultValue={selectedCard?.designation} onChange={handleChange}  /></td>\n                        </tr>\n                        <tr>\n                          <th>Address:</th>\n                          <td><input type=\"text\" name=\"address\" defaultValue={selectedCard?.address} onChange={handleChange}  /></td>\n                        </tr>\n                        <tr>\n                          <th>Email Id:</th>\n                          <td><input type=\"text\"  name=\"email\"  defaultValue={selectedCard?.email} onChange={handleChange}  disabled/></td>\n                        </tr>\n                        {/* <tr>\n                          <td><Button variant=\"contained\" color=\"primary\" onClick={handleClose}>Close</Button></td>\n                          <td><Button variant=\"contained\" color=\"primary\">Save</Button></td>\n                        </tr> */}\n                      </table>\n                      <div className={classes.btn}>\n                        <Button className={classes.btn1} variant=\"contained\" color=\"primary\" onClick={handleClose}>Close</Button>\n                        <Button className={classes.btn2} variant=\"contained\" color=\"primary\" onClick={editemployee}>Save</Button>\n                      </div>\n                    </div>\n                  </Modal>\n      </div>\n    </>\n  );\n\n\n\n}\n\n\n\n\nexport default Employees;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import { Helmet } from 'react-helmet';\n// import { Box, Container } from '@material-ui/core';\n// import CustomerListResults from '../components/EmployeeListResults';\n// import CustomerListToolbar from '../components/EmployeeListToolBar';\n// import customers from '../mocks/customer';\n\n// const Employee = () => (\n//   <>\n//     <Box\n//       sx={{\n//         backgroundColor: 'background.default',\n//         minHeight: '100%',\n//         py: 3\n//       }}\n//     >\n//       <Container maxWidth={false}>\n//         <CustomerListToolbar />\n//         <Box sx={{ pt: 3 }}>\n//           <CustomerListResults customers={customers} />\n//         </Box>\n//       </Container>\n//     </Box>\n//   </>\n// );\n\n// export default Employee;\n\n","import '../styles/userDashboard.css';\nimport Progress from \"../components/TaskProgress\"\nimport ToDo from \"../components/toDoList\"\nimport Slideshow from '../components/Slideshow';\n// import Slideshow from \"../components/Slideshow\"\n\nfunction UserDashboard() {\n\n  return (\n    <div className=\"App123\">\n      <div className=\"progress\">\n        <Progress />\n      </div>\n      <div className=\"toDoList\">\n        <ToDo />\n      </div>\n      <div className=\"carousel\">\n        <Slideshow /> \n      </div>\n    </div>\n  );\n} \n\nexport default UserDashboard;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport Alert from './alertbox';\nimport server from '../keys';\nconst designation = [\n  {\n    value: 'ASSOCIATE',\n    label: 'ASSOCIATE'\n  },\n  {\n    value: 'SOFTWARE',\n    label: 'SOFTWARE'\n  },\n  {\n    value: 'SENIOR SOFTWARE',\n    label: 'SENIOR SOFTWARE'\n  },\n  {\n      value: 'MANAGER',\n      label: 'MANAGER'\n    },\n    {\n      value: 'PRODUCT MANAGER',\n      label: 'PRODUCT MANAGER'\n    }\n];\nconst myHeaders = new Headers({\n  'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n  'Content-Type':'application/json'\n\n});\n\nconst RegistrationProfile = (props) => {\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    address: '',\n    empId:\"\",\n    designation: \"\",\n    dob: '',\n    doj: new Date(),\n    role: '0'\n  });\n  const [Designation, setDesignation] = useState('Mandatory Courses')\n  const setDesig=(event)=>{\n    setDesignation(event.target.value)\n    \n}\nconst [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\nfunction getDate(today){\n  var dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = dd + '/' + mm + '/' + yyyy;\nreturn today\n}\nfunction sendEmployee(){\n  var requestOptions={\n    method:'POST',\n    headers: myHeaders,\n    body:JSON.stringify(values)\n}\n\n\nfetch(`${server.url}adminAddEmployee`,requestOptions)\n.then((response)=>response.json())\n.then((data)=>{\n  if(data.message.length>0)\n  {\n    if(data.message==='added successfully')\n      {\n      setMessage('Added Successfully')\n      setSeverity('success')\n      setOpenHandle(true)\n      }else if(data.message==='Unauthorized Access - Not an Admin!')\n      {\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }else{\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }\n  }else{\n    setMessage('Sorry unable to make a request at this moment')\n    setSeverity('error')\n    setOpenHandle(true)\n  }\n //window.location.reload()\n  \n})\nsetMessage('')\n}\n\n\n\n  return (\n    <div>\n       {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n      <Card>\n        <CardHeader\n          title=\"Register New User\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Address\"\n                name=\"address\"\n                onChange={handleChange}\n                type=\"text\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Employee ID\"\n                name=\"empId\"\n                onChange={handleChange}\n                required\n                value={values.empId}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select Designation\"\n                name=\"designation\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                \n                variant=\"outlined\"\n              >\n                {designation.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                name=\"dob\"\n                onChange={handleChange}\n                required\n                value={values.dob}\n                type=\"date\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Date Of Joining\"\n                name=\"doj\"\n                onChange={handleChange}\n                disabled\n                value={getDate(values.doj)}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={sendEmployee}\n            >\n              Register User\n            </Button>\n        </Box>\n      </Card>\n    </form>\n    </div>\n  );\n};\n\nexport default RegistrationProfile;","import {Box, Container} from '@material-ui/core';\n  import RegisterProfile from '../components/RegistrationProfile'\n  \n  const Registration = () => (\n    <>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth=\"lg\">\n              <RegisterProfile />\n        </Container>\n      </Box>\n    </>\n  );\n  \n  export default Registration;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport Alert from './alertbox';\nimport server from '../keys';\n\nconst AddCourses = (props) => {\n  const [values, setValues] = useState({\n    summary: '',\n    courseName: '',\n    weightage: '',\n    amountCompleted: '0',\n    courseID:\"\",\n  });\n\n  \n  const [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      courseID:values.courseName.substring(0,1),\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const myHeaders2=new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n    'Content-Type':'application/json'\n  });\n  function sendCourses(){\n    var requestOptions={\n      method:'POST',\n      headers:myHeaders2,\n      body:JSON.stringify(values)\n  }\n  \n  \n  fetch(`${server.url}adminAddCourse`,requestOptions)\n  .then((response)=>response.json())\n  .then((data)=>{\n    console.log(data,data.message)\n    if(data.message.length>0)\n    {\n      if(data.message==='added successfully')\n      {\n      setMessage('Added Successfully')\n      setSeverity('success')\n      setOpenHandle(true)\n      }else if(data.message==='Unauthorized Access - Not an Admin!')\n      {\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }else{\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }\n      }else{\n      setMessage('Sorry unable to make a request at this moment')\n      setSeverity('error')\n      setOpenHandle(true)\n    }\n   // window.location.reload()\n })\n setMessage('')\n  }\n\n  return (\n    <div>\n       {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n     \n      <Card>\n        <CardHeader\n          title=\"Add New Course\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Course name\"\n                name=\"courseName\"\n                onChange={handleChange}\n                required\n                value={values.courseName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Weightage\"\n                name=\"weightage\"\n                onChange={handleChange}\n                required\n                value={values.weightage}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Summary\"\n                name=\"summary\"\n                onChange={handleChange}\n                required\n                value={values.summary}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Course ID\"\n                name=\"courseID\"\n                onChange={handleChange}\n                value={values.courseName.substring(0,1)}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={sendCourses}\n          >\n            Add New Course\n          </Button>\n        </Box>\n      </Card>\n    </form>\n    </div>\n  );\n};\n\nexport default AddCourses;","import {Box, Container} from '@material-ui/core';\n  import AddCourse from '../components/AddCourse'\n  \n  const NewCourse = () => (\n    <>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth=\"lg\">\n              <AddCourse />\n        </Container>\n      </Box>\n    </>\n  );\n  \n  export default NewCourse;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport Alert from './alertbox';\nimport server from '../keys';\nconst designation = [\n  {\n    value: 'Mandatory Task',\n    label: 'Mandatory Task'\n  },\n  {\n    value: 'ASSOCIATE',\n    label: 'ASSOCIATE'\n  },\n  {\n    value: 'SOFTWARE',\n    label: 'SOFTWARE'\n  },\n  {\n    value: 'SENIOR SOFTWARE',\n    label: 'SENIOR SOFTWARE'\n  },\n  {\n      value: 'MANAGER',\n      label: 'MANAGER'\n    },\n    {\n      value: 'PRODUCT MANAGER',\n      label: 'PRODUCT MANAGER'\n    }\n];\n\nconst AddNewToDo = (props) => {\n  const [values, setValues] = useState({\n    taskName: '',\n    'Is Complteted': false,\n    date: \"15 days from Date Of Joining\",\n    designation: 'Select Designation'\n  });\n\n  const [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  const [isupdated,setupdated]=useState(false)\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n  const myHeaders = new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n    'Content-type' : 'application/json'\n});\n  function sendNewToDo(){\n    var requestOptions={\n      method:'POST',\n      headers:myHeaders,\n      body:JSON.stringify({\n        tasks:[{'id':values.taskName}],\n        designation: values.designation\n      })\n  }\n  \n // console.log(values.designation)\n if(values.designation === 'Select Designation' || values.designation === 'Mandatory Task'){\n  \n  fetch(`${server.url}addToDoforAll`,requestOptions)\n  .then((response)=>response.json())\n  .then((data)=>{\n    if(data.message.length>0)\n    {\n      setMessage('Updated Successfully')\n      setSeverity('success')\n      setOpenHandle(true)\n    }else{\n      setMessage('Sorry unable to make a request at this moment')\n      setSeverity('error')\n      setOpenHandle(true)\n    }\n    window.location.reload()\n    \n  })}\n  else{\n    fetch(`${server.url}addToDo`,requestOptions)\n  .then((response)=>response.json())\n  .then((data)=>{\n    if(data.message.length>0)\n    {\n      if(data.message==='added successfully')\n      {\n      setMessage('Added Successfully')\n      setSeverity('success')\n      setOpenHandle(true)\n      }else if(data.message==='Unauthorized Access - Not an Admin!')\n      {\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }else{\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }\n    }else{\n      setMessage('Sorry unable to make a request at this moment')\n      setSeverity('error')\n      setOpenHandle(true)\n    }\n  // window.location.reload()\n\n  })\n  setMessage('')\n  }\n  }\n\n\n\n\n  return (\n    <div>\n      {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n      <Card>\n        <CardHeader\n          title=\"Add New To Do\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Task name\"\n                name=\"taskName\"\n                onChange={handleChange}\n                required\n                value={values.taskName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Is Completed\"\n                name=\"Is Complteted\"\n                onChange={handleChange}\n                disabled\n                value={values['Is Complteted']}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Date\"\n                name=\"date\"\n                onChange={handleChange}\n                disabled\n                value={values.date}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select Designation\"\n                name=\"designation\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {designation.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={sendNewToDo}\n          >\n            Add task\n          </Button>\n        </Box>\n      </Card>\n    </form>\n    </div>\n  );\n};\n\nexport default AddNewToDo;","import { useState,useEffect } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from './alertbox';\nimport server from '../keys';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nconst designation = [\n  {\n    value: 'Mandatory Task',\n    label: 'Mandatory Task'\n  },\n  {\n    value: 'ASSOCIATE',\n    label: 'ASSOCIATE'\n  },\n  {\n    value: 'SOFTWARE',\n    label: 'SOFTWARE'\n  },\n  {\n    value: 'SENIOR SOFTWARE',\n    label: 'SENIOR SOFTWARE'\n  },\n  {\n      value: 'MANAGER',\n      label: 'MANAGER'\n    },\n    {\n      value: 'PRODUCT MANAGER',\n      label: 'PRODUCT MANAGER'\n    }\n];\n\n\nconst AssignCourse = (props) => {\n\n  \n  const [Designation, setDesignation] = useState('Mandatory Courses')\nconst [assignedCourse,setAssigned]=useState([])\nconst [isupdated,setupdated]=useState(false)\n  \n  const setDesig=(event)=>{\n        setDesignation(event.target.value)\n        \n  }\n  \n  \n  const handleChange = (event) => {\n    var cname=assignedCourse.findIndex(x=>x === event.target.name)\n    if(cname>=0){\n        assignedCourse.splice(cname,1)\n    }\n    else{\n      var obj={\n        'id': event.target.name\n      }\n        assignedCourse.push(obj)\n    }\n    \n  };\n  const [courselist,setCourses]=useState([])\n  const [message,setMessage]=useState('')\n  const [severity,setSeverity]=useState('')\n  const [openHandle,setOpenHandle]=useState(false)\n  const myHeaders = new Headers({\n    'Authorization': `Bearer ${localStorage.getItem('tokenId')}`\n});\n  useEffect(() => {\n    console.log(\"from assigncourses useeffect\",isupdated)\n    // POST request using fetch inside useEffect React hook\n    fetch(`${server.url}adminGetCourses`, {\n      headers: myHeaders\n    })\n    .then(response => response.json())\n    .then(data =>{\n      //console.log(data.allCourses)\n      var tempList=[]\n      for(let i=0;i<data.allCourses.length;i++){\n        var obj={\n          courseImage:\"Course Image\",\n          CourseName:data.allCourses[i].courseName,\n          weightage:data.allCourses[i].weightage,\n          summary:data.allCourses[i].summary,\n          \n        }\n        var index=tempList.findIndex(x=>x.CourseName === obj.CourseName)\n        if(index>=0){\n          console.log(\"courses exist\")\n        }else{\n          tempList.push(obj)\n        }\n      }\n      setCourses([...tempList])\n    })\n    setupdated(false) \n    },[isupdated])\n\n    console.log(courselist)\n\nconst myHeaders2=new Headers({\n  'Authorization': `Bearer ${localStorage.getItem('tokenId')}`,\n  'Content-Type':'application/json'\n});\n  function sendAssignedCourses(){\n    var requestOptions={\n      method:'POST',\n      headers:myHeaders2,\n      body:JSON.stringify({\n          designation:Designation,\n          courses:assignedCourse\n      })\n  }\n  \n // console.log(values.designation)\n \n  \n  fetch(`${server.url}adminCourseDesignation`,requestOptions)\n  .then((response)=>response.json())\n  .then((data)=>{\n    if(data.message.length>0)\n    {\n      if(data.message==='added successfully')\n      {\n      setMessage('Added Successfully')\n      setSeverity('success')\n      setOpenHandle(true)\n      }else if(data.message==='Unauthorized Access - Not an Admin!')\n      {\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }else{\n        setMessage(data.message)\n      setSeverity('warning')\n      setOpenHandle(true)\n      }\n    }else{\n      setMessage('Sorry unable to make a request at this moment')\n      setSeverity('error')\n      setOpenHandle(true)\n    }\n    //window.location.reload()\n    setupdated(true) \n  })\n  setMessage('')\n  }\n\n\n\n\n  return (\n    <div>\n        {message!==''?<Alert message={message} severity={severity} isClicked={openHandle}></Alert>:null}\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n      <Card>\n        <CardHeader\n          title=\"Assign Course\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select Designation\"\n                name=\"designation\"\n                onChange={setDesig}\n                required\n                select\n                SelectProps={{ native: true }}\n                \n                variant=\"outlined\"\n              >\n                {designation.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <FormControl component=\"fieldset\" variant=\"standard\">\n        <FormGroup>\n            {\n                \n                 courselist.map((t)=>{\n                         return(\n                                <FormControlLabel\n                                          control={\n                                        <Checkbox  onChange={handleChange} name={t.CourseName} />\n                                                   }\n                                       label={t.CourseName}\n                                />\n                               )\n                                   }\n                                ) }\n       </FormGroup>  \n    </FormControl>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={sendAssignedCourses}\n          >\n            Assign Courses\n          </Button>\n        </Box>\n      </Card>\n    </form>\n    </div>\n  );\n};\n\nexport default AssignCourse;","import {\n    Box,\n    Container,\n    Grid\n  } from '@material-ui/core';\n  import AddNewToDo from '../components/AddNewToDo'\n  import AssignCourse from '../components/AssignCourse';\n  const Account = () => (\n    <>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={12}\n              md={6}\n              xs={12}\n            >\n              <AddNewToDo />\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={6}\n              xs={12}\n            >\n              <AssignCourse />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n  \n  export default Account;","import { Route, Router, Switch } from 'react-router-dom'; \nimport Account from './Pages/Accounts'\nimport Courses from './Pages/Courses';\nimport Employees from \"./Pages/Employees\"\nimport UserDashboard from \"./Pages/UserDashboard\"\nimport Registration from \"./Pages/Registration\"\nimport NewCourse from \"./Pages/NewCourse\"\nimport AddToDo from \"./Pages/AddToDo\"\nimport Login from './Pages/Login'\n\nfunction RouteComp() {\n    return(\n        <div>\n            <Switch>\n                <Route path=\"/userDash\" component={UserDashboard} />\n                <Route exact path=\"/courses\" component={Courses}/>\n                <Route exact path=\"/ProfilePage\" component={Account}/>\n                <Route exact path=\"/AllEmployees\" component={Employees}/>\n                <Route exact path=\"/AllEmployees/newEmp\" component={Registration} />\n                <Route exact path=\"/courses/addCourse\" component={NewCourse} />\n                <Route exact path=\"/AddToDo\" component={AddToDo} />\n                <Route exact path=\"/logout\" component={Login} />\n            </Switch>\n      </div>\n    )\n}\n\nexport default RouteComp;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n//icons\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport RouteComp from \"../RouteComp\"\n// import DemoPage from \"../demoPage\"\nimport {  NavLink } from 'react-router-dom'; \nimport server from '../keys';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const logout=()=> {\n    localStorage.clear()\n    window.location=\"http://onboardingbucket1.s3-website-us-east-1.amazonaws.com/\"\n  }\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {/* <ListItem>\n            <NavLink to=\"/userDash\">\n            <Button>  \n              <ListItemIcon><DashboardIcon /></ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </Button>\n            </NavLink>\n          </ListItem> */}\n          <ListItem>\n            <NavLink to=\"/courses\">\n            <Button>  \n              <ListItemIcon><ImportContactsIcon /></ListItemIcon>\n              <ListItemText primary=\"Courses\" />\n            </Button>\n            </NavLink>\n          </ListItem>\n          {/* <ListItem>\n            <NavLink to=\"/ProfilePage\">\n            <Button >  \n              <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n              <ListItemText primary=\"Profile Page\" />\n            </Button>\n            </NavLink>\n          </ListItem> */}\n          <ListItem>\n            <NavLink to=\"/AllEmployees\">\n            <Button >  \n              <ListItemIcon><PeopleIcon /></ListItemIcon>\n              <ListItemText primary=\"All Employees\" />\n            </Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/AddToDo\">\n            <Button >  \n              <ListItemIcon><ListAltIcon /></ListItemIcon>\n              <ListItemText primary=\"To Do Task\" />\n            </Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/logout\">\n            <Button href=\"http://localhost:7901/userLogout\" onClick={logout}>  \n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"logout\" />\n            </Button>\n            </NavLink>\n          </ListItem>     \n        </List>\n      </Drawer>\n      <RouteComp />\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n//icons\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport RouteComp from \"../RouteComp\"\n// import DemoPage from \"../demoPage\"\nimport {  NavLink } from 'react-router-dom'; \nimport server from '../keys';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const logout=()=> {\n    localStorage.clear()\n    window.location=\"http://onboardingbucket1.s3-website-us-east-1.amazonaws.com/\"\n  }\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem>\n            <NavLink to=\"/ProfilePage\">\n            <Button >  \n              <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n              <ListItemText primary=\"Profile Page\" />\n            </Button>\n            </NavLink>\n          </ListItem>\n          <NavLink to=\"/logout\">\n          <ListItem>\n            <Button href=\"http://localhost:7901/userLogout\" onClick={logout}>  \n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"logout\" />\n            </Button>\n          </ListItem>  \n          </NavLink>   \n        </List>\n      </Drawer>\n      <RouteComp />\n    </div>\n  );\n}\n","import React, {Component} from 'react'\nimport './App.css';\nimport Footer from \"./components/footer\";\nimport { BrowserRouter as Router} from 'react-router-dom'; \nimport MiniDrawer from './components/MiniDrawer';\nimport UserDrawer from './components/UserDrawer'\nimport Login from './Pages/Login'\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {user:localStorage.getItem('role')};\n  }\n\n  render() {\n    let user = this.state.user;\n    \n    let Drawer;\n    if(!user)\n    {\n      Drawer=<Login />\n      user=this.state.user\n      console.log(user)\n     if(user)\n     {\n      if (user==0) {\n        Drawer = <UserDrawer />\n      } else {\n        Drawer = <MiniDrawer />\n      }\n     }\n    }else{\n      console.log(user)\n      if (user==0) {\n        Drawer = <UserDrawer />\n      } else {\n        Drawer = <MiniDrawer />\n      }\n    }\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"header\">\n      </div>\n      <div className=\"container\">\n        <main className=\"main\">\n          {Drawer}\n        </main>\n      </div>\n      <div className=\"footer\"><Footer /></div>\n    </div>\n    </Router>\n  );\n  }\n} \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}